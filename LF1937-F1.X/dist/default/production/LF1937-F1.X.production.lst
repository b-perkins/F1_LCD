

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Jan 17 17:34:26 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16LF1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.40
    23                           ; Generated 01/12/2016 GMT
    24                           ; 
    25                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16LF1937 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  0110                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018F                     	;# 
   126  0190                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020D                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  029F                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0791                     	;# 
   201  0792                     	;# 
   202  0793                     	;# 
   203  0794                     	;# 
   204  0795                     	;# 
   205  0798                     	;# 
   206  0799                     	;# 
   207  079A                     	;# 
   208  07A0                     	;# 
   209  07A1                     	;# 
   210  07A2                     	;# 
   211  07A3                     	;# 
   212  07A4                     	;# 
   213  07A5                     	;# 
   214  07A6                     	;# 
   215  07A7                     	;# 
   216  07A8                     	;# 
   217  07A9                     	;# 
   218  07AA                     	;# 
   219  07AB                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231                           
   232                           	psect	idataBANK0
   233  034D                     __pidataBANK0:	
   234                           
   235                           ;initializer for _isr_count
   236  034D  3401               	retlw	1
   237  034E  3400               	retlw	0
   238                           
   239                           	psect	stringtext
   240  033D                     __pstringtext:	
   241  033D                     _segment_data:	
   242  033D  343F               	retlw	63
   243  033E  3406               	retlw	6
   244  033F  345B               	retlw	91
   245  0340  344F               	retlw	79
   246  0341  3466               	retlw	102
   247  0342  346D               	retlw	109
   248  0343  347D               	retlw	125
   249  0344  3407               	retlw	7
   250  0345  347F               	retlw	127
   251  0346  3467               	retlw	103
   252  0347  3477               	retlw	119
   253  0348  347C               	retlw	124
   254  0349  3439               	retlw	57
   255  034A  345E               	retlw	94
   256  034B  3479               	retlw	121
   257  034C  3471               	retlw	113
   258  034D                     __end_of_segment_data:	
   259  0011                     _PIR1bits	set	17
   260  000E                     _PORTC	set	14
   261  000F                     _PORTD	set	15
   262  0010                     _PORTE	set	16
   263  0018                     _T1CON	set	24
   264  0018                     _T1CONbits	set	24
   265  0019                     _T1GCON	set	25
   266  0017                     _TMR1H	set	23
   267  0016                     _TMR1L	set	22
   268  005F                     _GIE	set	95
   269  0092                     _LCDIF	set	146
   270  005E                     _PEIE	set	94
   271  00C3                     _T1OSCEN	set	195
   272  009D                     _ADCON0	set	157
   273  009D                     _ADCON0bits	set	157
   274  009E                     _ADCON1	set	158
   275  009C                     _ADRESH	set	156
   276  009B                     _ADRESL	set	155
   277  0099                     _OSCCON	set	153
   278  0091                     _PIE1bits	set	145
   279  008E                     _TRISCbits	set	142
   280  008F                     _TRISDbits	set	143
   281  0090                     _TRISEbits	set	144
   282  0492                     _LCDIE	set	1170
   283  010F                     _LATDbits	set	271
   284  018C                     _ANSELAbits	set	396
   285  018D                     _ANSELBbits	set	397
   286  018F                     _ANSELDbits	set	399
   287  0791                     _LCDCON	set	1937
   288  0791                     _LCDCONbits	set	1937
   289  0794                     _LCDCST	set	1940
   290  07A0                     _LCDDATA0	set	1952
   291  07A1                     _LCDDATA1	set	1953
   292  07AA                     _LCDDATA10	set	1962
   293  07AB                     _LCDDATA11	set	1963
   294  07A2                     _LCDDATA2	set	1954
   295  07A3                     _LCDDATA3	set	1955
   296  07A4                     _LCDDATA4	set	1956
   297  07A5                     _LCDDATA5	set	1957
   298  07A6                     _LCDDATA6	set	1958
   299  07A7                     _LCDDATA7	set	1959
   300  07A8                     _LCDDATA8	set	1960
   301  07A9                     _LCDDATA9	set	1961
   302  0792                     _LCDPS	set	1938
   303  0792                     _LCDPSbits	set	1938
   304  0793                     _LCDREF	set	1939
   305  0795                     _LCDRL	set	1941
   306  0798                     _LCDSE0	set	1944
   307  0799                     _LCDSE1	set	1945
   308  079A                     _LCDSE2	set	1946
   309  3C8F                     _LCDEN	set	15503
   310  3C9F                     _LCDIRE	set	15519
   311  3C9D                     _LCDIRI	set	15517
   312  3C9E                     _LCDIRS	set	15518
   313  3D00                     _SEG0COM0	set	15616
   314  3D18                     _SEG0COM1	set	15640
   315  3D30                     _SEG0COM2	set	15664
   316  3D48                     _SEG0COM3	set	15688
   317  3D0A                     _SEG10COM0	set	15626
   318  3D22                     _SEG10COM1	set	15650
   319  3D3A                     _SEG10COM2	set	15674
   320  3D52                     _SEG10COM3	set	15698
   321  3D0C                     _SEG12COM0	set	15628
   322  3D24                     _SEG12COM1	set	15652
   323  3D3C                     _SEG12COM2	set	15676
   324  3D54                     _SEG12COM3	set	15700
   325  3D10                     _SEG16COM0	set	15632
   326  3D28                     _SEG16COM1	set	15656
   327  3D40                     _SEG16COM2	set	15680
   328  3D11                     _SEG17COM0	set	15633
   329  3D29                     _SEG17COM1	set	15657
   330  3D41                     _SEG17COM2	set	15681
   331  3D59                     _SEG17COM3	set	15705
   332  3D01                     _SEG1COM0	set	15617
   333  3D19                     _SEG1COM1	set	15641
   334  3D31                     _SEG1COM2	set	15665
   335  3D49                     _SEG1COM3	set	15689
   336  3D14                     _SEG20COM0	set	15636
   337  3D2C                     _SEG20COM1	set	15660
   338  3D44                     _SEG20COM2	set	15684
   339  3D5C                     _SEG20COM3	set	15708
   340  3D02                     _SEG2COM0	set	15618
   341  3D1A                     _SEG2COM1	set	15642
   342  3D32                     _SEG2COM2	set	15666
   343  3D4A                     _SEG2COM3	set	15690
   344  3D04                     _SEG4COM0	set	15620
   345  3D1C                     _SEG4COM1	set	15644
   346  3D34                     _SEG4COM2	set	15668
   347  3D4C                     _SEG4COM3	set	15692
   348  3D05                     _SEG5COM0	set	15621
   349  3D1D                     _SEG5COM1	set	15645
   350  3D35                     _SEG5COM2	set	15669
   351  3D4D                     _SEG5COM3	set	15693
   352  3C8E                     _SLPEN	set	15502
   353  3C94                     _WA	set	15508
   354  3C8D                     _WERR	set	15501
   355  3C97                     _WFT	set	15511
   356                           
   357                           ; #config settings
   358  0000                     
   359                           	psect	cinit
   360  0025                     start_initialization:	
   361  0025                     __initialization:	
   362                           
   363                           ; Initialize objects allocated to BANK0
   364  0025  3183  234D  3180   	fcall	__pidataBANK0	;fetch initializer
   365  0028  00A8               	movwf	__pdataBANK0& (0+127)
   366  0029  3183  234E         	fcall	__pidataBANK0+1	;fetch initializer
   367  002B  00A9               	movwf	(__pdataBANK0+1)& (0+127)
   368                           
   369                           ; Clear objects allocated to BANK0
   370  002C  01A0               	clrf	__pbssBANK0& (0+127)
   371  002D  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   372  002E  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   373  002F  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   374  0030                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  0030                     __end_of__initialization:	
   378  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   379  0031  0020               	movlb	0
   380  0032  3183  2B0B         	ljmp	_main	;jump to C main() function
   381                           
   382                           	psect	bssBANK0
   383  0020                     __pbssBANK0:	
   384  0020                     _pot_value:	
   385  0020                     	ds	2
   386  0022                     _temp:	
   387  0022                     	ds	2
   388                           
   389                           	psect	dataBANK0
   390  0028                     __pdataBANK0:	
   391  0028                     _isr_count:	
   392  0028                     	ds	2
   393                           
   394                           	psect	cstackCOMMON
   395  0070                     __pcstackCOMMON:	
   396  0070                     ?_device_init:	
   397  0070                     ?_main:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_lcd_init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_isr:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ??_isr:	
   407                           ; 1 bytes @ 0x0
   408                           
   409                           
   410                           ; 1 bytes @ 0x0
   411  0070                     	ds	1
   412  0071                     ??_device_init:	
   413  0071                     ?_lcd_display_digits:	
   414                           ; 1 bytes @ 0x1
   415                           
   416  0071                     ??_lcd_init:	
   417                           ; 1 bytes @ 0x1
   418                           
   419  0071                     ?___awdiv:	
   420                           ; 1 bytes @ 0x1
   421                           
   422  0071                     ?___awmod:	
   423                           ; 2 bytes @ 0x1
   424                           
   425  0071                     lcd_display_digits@b:	
   426                           ; 2 bytes @ 0x1
   427                           
   428  0071                     ___awdiv@divisor:	
   429                           ; 2 bytes @ 0x1
   430                           
   431  0071                     ___awmod@divisor:	
   432                           ; 2 bytes @ 0x1
   433                           
   434                           
   435                           ; 2 bytes @ 0x1
   436  0071                     	ds	2
   437  0073                     ??_lcd_display_digits:	
   438  0073                     ___awdiv@dividend:	
   439                           ; 1 bytes @ 0x3
   440                           
   441  0073                     ___awmod@dividend:	
   442                           ; 2 bytes @ 0x3
   443                           
   444                           
   445                           ; 2 bytes @ 0x3
   446  0073                     	ds	1
   447  0074                     lcd_display_digits@val:	
   448                           
   449                           ; 1 bytes @ 0x4
   450  0074                     	ds	1
   451  0075                     ??___awdiv:	
   452  0075                     ??___awmod:	
   453                           ; 1 bytes @ 0x5
   454                           
   455                           
   456                           ; 1 bytes @ 0x5
   457  0075                     	ds	1
   458  0076                     ___awdiv@counter:	
   459  0076                     ___awmod@counter:	
   460                           ; 1 bytes @ 0x6
   461                           
   462                           
   463                           ; 1 bytes @ 0x6
   464  0076                     	ds	1
   465  0077                     ___awdiv@sign:	
   466  0077                     ___awmod@sign:	
   467                           ; 1 bytes @ 0x7
   468                           
   469                           
   470                           ; 1 bytes @ 0x7
   471  0077                     	ds	1
   472  0078                     ___awdiv@quotient:	
   473                           
   474                           ; 2 bytes @ 0x8
   475  0078                     	ds	2
   476  007A                     ?_display_int:	
   477  007A                     display_int@t:	
   478                           ; 1 bytes @ 0xA
   479                           
   480                           
   481                           ; 2 bytes @ 0xA
   482  007A                     	ds	2
   483  007C                     ??_display_int:	
   484                           
   485                           ; 1 bytes @ 0xC
   486  007C                     	ds	1
   487  007D                     ??_display_pot:	
   488  007D                     ??_main:	
   489                           ; 1 bytes @ 0xD
   490                           
   491                           
   492                           	psect	cstackBANK0
   493  0024                     __pcstackBANK0:	
   494                           ; 1 bytes @ 0xD
   495                           
   496  0024                     display_int@bcd:	
   497                           
   498                           ; 2 bytes @ 0x0
   499  0024                     	ds	2
   500  0026                     ?_display_pot:	
   501  0026                     display_pot@p:	
   502                           ; 1 bytes @ 0x2
   503                           
   504                           
   505                           ; 2 bytes @ 0x2
   506  0026                     	ds	2
   507                           
   508                           	psect	maintext
   509  030B                     __pmaintext:	
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 17 in file "newmain.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : B1F/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   529 ;;      Params:         0       0       0       0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels required when called:    4
   535 ;; This function calls:
   536 ;;		_device_init
   537 ;;		_display_pot
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _main
   545  030B                     _main:	
   546                           
   547                           ;newmain.c: 19: device_init();
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   551  030B  3180  2034  3183   	fcall	_device_init
   552  030E                     l1575:	
   553                           ;newmain.c: 21: while(WA){
   554                           
   555                           ;newmain.c: 20: while(1){
   556                           
   557  030E  002F               	movlb	15	; select bank15
   558  030F  1E12               	btfss	18,4	;volatile
   559  0310  2B1A               	goto	l1577
   560                           
   561                           ;newmain.c: 22: display_pot(temp);
   562  0311  0020               	movlb	0	; select bank0
   563  0312  0823               	movf	_temp+1,w
   564  0313  00A7               	movwf	display_pot@p+1
   565  0314  0822               	movf	_temp,w
   566  0315  00A6               	movwf	display_pot@p
   567  0316  3183  2326  3183   	fcall	_display_pot
   568  0319  2B0E               	goto	l1575
   569  031A                     l1577:	
   570                           
   571                           ;newmain.c: 23: }
   572                           ;newmain.c: 24: LATDbits.LATD1 = !LATDbits.LATD1;
   573  031A  1003               	clrc
   574  031B  0022               	movlb	2	; select bank2
   575  031C  1C8F               	btfss	15,1	;volatile
   576  031D  1403               	setc
   577  031E  1C03               	btfss	3,0
   578  031F  2B23               	goto	u2000
   579  0320  0022               	movlb	2	; select bank2
   580  0321  148F               	bsf	15,1	;volatile
   581  0322  2B0E               	goto	l1575
   582  0323                     u2000:	
   583  0323  0022               	movlb	2	; select bank2
   584  0324  108F               	bcf	15,1	;volatile
   585  0325  2B0E               	goto	l1575
   586  0326                     __end_of_main:	
   587                           
   588                           	psect	text1
   589  0326                     __ptext1:	
   590 ;; *************** function _display_pot *****************
   591 ;; Defined at:
   592 ;;		line 90 in file "newmain.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  p               2    2[BANK0 ] int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   606 ;;      Params:         0       2       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0
   609 ;;      Totals:         0       2       0       0       0       0       0       0
   610 ;;Total ram usage:        2 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    3
   613 ;; This function calls:
   614 ;;		_display_int
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _display_pot
   622  0326                     _display_pot:	
   623                           
   624                           ;newmain.c: 91: display_int(p);
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _display_pot: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   628  0326  0020               	movlb	0	; select bank0
   629  0327  0827               	movf	display_pot@p+1,w
   630  0328  00FB               	movwf	display_int@t+1
   631  0329  0826               	movf	display_pot@p,w
   632  032A  00FA               	movwf	display_int@t
   633  032B  3181  21C8         	fcall	_display_int
   634                           
   635                           ;newmain.c: 92: SEG4COM3 = 0;
   636  032D  002F               	movlb	15	; select bank15
   637  032E  1229               	bcf	41,4	;volatile
   638                           
   639                           ;newmain.c: 93: SEG10COM3 = 0;
   640  032F  112A               	bcf	42,2	;volatile
   641                           
   642                           ;newmain.c: 94: SEG17COM0 = 1;
   643  0330  14A2               	bsf	34,1	;volatile
   644                           
   645                           ;newmain.c: 95: SEG17COM1 = 1;
   646  0331  14A5               	bsf	37,1	;volatile
   647                           
   648                           ;newmain.c: 96: SEG20COM0 = 0;
   649  0332  1222               	bcf	34,4	;volatile
   650                           
   651                           ;newmain.c: 97: SEG20COM1 = 1;
   652  0333  1625               	bsf	37,4	;volatile
   653                           
   654                           ;newmain.c: 98: SEG20COM2 = 0;
   655  0334  1228               	bcf	40,4	;volatile
   656                           
   657                           ;newmain.c: 99: SEG20COM3 = 0;
   658  0335  122B               	bcf	43,4	;volatile
   659                           
   660                           ;newmain.c: 100: SEG0COM2 = 0;
   661  0336  1026               	bcf	38,0	;volatile
   662                           
   663                           ;newmain.c: 101: SEG1COM0 = 0;
   664  0337  10A0               	bcf	32,1	;volatile
   665                           
   666                           ;newmain.c: 102: SEG1COM1 = 0;
   667  0338  10A3               	bcf	35,1	;volatile
   668                           
   669                           ;newmain.c: 103: SEG0COM0 = 0;
   670  0339  1020               	bcf	32,0	;volatile
   671                           
   672                           ;newmain.c: 104: SEG17COM3 = 0;
   673  033A  10AB               	bcf	43,1	;volatile
   674                           
   675                           ;newmain.c: 105: SEG17COM2 = 1;
   676  033B  14A8               	bsf	40,1	;volatile
   677  033C  0008               	return
   678  033D                     __end_of_display_pot:	
   679                           
   680                           	psect	text2
   681  01C8                     __ptext2:	
   682 ;; *************** function _display_int *****************
   683 ;; Defined at:
   684 ;;		line 109 in file "newmain.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  t               2   10[COMMON] int 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  bcd             2    0[BANK0 ] struct .
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      unsigned char 
   691 ;; Registers used:
   692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   698 ;;      Params:         2       0       0       0       0       0       0       0
   699 ;;      Locals:         0       2       0       0       0       0       0       0
   700 ;;      Temps:          1       0       0       0       0       0       0       0
   701 ;;      Totals:         3       2       0       0       0       0       0       0
   702 ;;Total ram usage:        5 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		___awdiv
   707 ;;		___awmod
   708 ;;		_lcd_display_digits
   709 ;; This function is called by:
   710 ;;		_display_pot
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _display_int
   716  01C8                     _display_int:	
   717                           
   718                           ;newmain.c: 110: BCD_TYPE bcd;
   719                           ;newmain.c: 112: bcd.digit0 = t %10;
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _display_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   723  01C8  300A               	movlw	10
   724  01C9  00F1               	movwf	___awmod@divisor
   725  01CA  3000               	movlw	0
   726  01CB  00F2               	movwf	___awmod@divisor+1
   727  01CC  087B               	movf	display_int@t+1,w
   728  01CD  00F4               	movwf	___awmod@dividend+1
   729  01CE  087A               	movf	display_int@t,w
   730  01CF  00F3               	movwf	___awmod@dividend
   731  01D0  3182  2297  3181   	fcall	___awmod
   732  01D3  0020               	movlb	0	; select bank0
   733  01D4  0824               	movf	display_int@bcd,w
   734  01D5  0671               	xorwf	?___awmod,w
   735  01D6  39F0               	andlw	-16
   736  01D7  0671               	xorwf	?___awmod,w
   737  01D8  00A4               	movwf	display_int@bcd
   738                           
   739                           ;newmain.c: 113: t /= 10;
   740  01D9  300A               	movlw	10
   741  01DA  00F1               	movwf	___awdiv@divisor
   742  01DB  3000               	movlw	0
   743  01DC  00F2               	movwf	___awdiv@divisor+1
   744  01DD  087B               	movf	display_int@t+1,w
   745  01DE  00F4               	movwf	___awdiv@dividend+1
   746  01DF  087A               	movf	display_int@t,w
   747  01E0  00F3               	movwf	___awdiv@dividend
   748  01E1  3182  2246  3181   	fcall	___awdiv
   749  01E4  0872               	movf	?___awdiv+1,w
   750  01E5  00FB               	movwf	display_int@t+1
   751  01E6  0871               	movf	?___awdiv,w
   752  01E7  00FA               	movwf	display_int@t
   753                           
   754                           ;newmain.c: 114: bcd.digit1 = t % 10;
   755  01E8  300A               	movlw	10
   756  01E9  00F1               	movwf	___awmod@divisor
   757  01EA  3000               	movlw	0
   758  01EB  00F2               	movwf	___awmod@divisor+1
   759  01EC  087B               	movf	display_int@t+1,w
   760  01ED  00F4               	movwf	___awmod@dividend+1
   761  01EE  087A               	movf	display_int@t,w
   762  01EF  00F3               	movwf	___awmod@dividend
   763  01F0  3182  2297  3181   	fcall	___awmod
   764  01F3  0871               	movf	?___awmod,w
   765  01F4  00FC               	movwf	??_display_int
   766  01F5  0EFC               	swapf	??_display_int,f
   767  01F6  0020               	movlb	0	; select bank0
   768  01F7  0824               	movf	display_int@bcd,w
   769  01F8  067C               	xorwf	??_display_int,w
   770  01F9  390F               	andlw	-241
   771  01FA  067C               	xorwf	??_display_int,w
   772  01FB  00A4               	movwf	display_int@bcd
   773                           
   774                           ;newmain.c: 115: t /= 10;
   775  01FC  300A               	movlw	10
   776  01FD  00F1               	movwf	___awdiv@divisor
   777  01FE  3000               	movlw	0
   778  01FF  00F2               	movwf	___awdiv@divisor+1
   779  0200  087B               	movf	display_int@t+1,w
   780  0201  00F4               	movwf	___awdiv@dividend+1
   781  0202  087A               	movf	display_int@t,w
   782  0203  00F3               	movwf	___awdiv@dividend
   783  0204  3182  2246  3181   	fcall	___awdiv
   784  0207  0872               	movf	?___awdiv+1,w
   785  0208  00FB               	movwf	display_int@t+1
   786  0209  0871               	movf	?___awdiv,w
   787  020A  00FA               	movwf	display_int@t
   788                           
   789                           ;newmain.c: 116: bcd.digit2 = t % 10;
   790  020B  300A               	movlw	10
   791  020C  00F1               	movwf	___awmod@divisor
   792  020D  3000               	movlw	0
   793  020E  00F2               	movwf	___awmod@divisor+1
   794  020F  087B               	movf	display_int@t+1,w
   795  0210  00F4               	movwf	___awmod@dividend+1
   796  0211  087A               	movf	display_int@t,w
   797  0212  00F3               	movwf	___awmod@dividend
   798  0213  3182  2297  3181   	fcall	___awmod
   799  0216  0020               	movlb	0	; select bank0
   800  0217  0825               	movf	display_int@bcd+1,w
   801  0218  0671               	xorwf	?___awmod,w
   802  0219  39F0               	andlw	-16
   803  021A  0671               	xorwf	?___awmod,w
   804  021B  00A5               	movwf	display_int@bcd+1
   805                           
   806                           ;newmain.c: 117: t /= 10;
   807  021C  300A               	movlw	10
   808  021D  00F1               	movwf	___awdiv@divisor
   809  021E  3000               	movlw	0
   810  021F  00F2               	movwf	___awdiv@divisor+1
   811  0220  087B               	movf	display_int@t+1,w
   812  0221  00F4               	movwf	___awdiv@dividend+1
   813  0222  087A               	movf	display_int@t,w
   814  0223  00F3               	movwf	___awdiv@dividend
   815  0224  3182  2246  3181   	fcall	___awdiv
   816  0227  0872               	movf	?___awdiv+1,w
   817  0228  00FB               	movwf	display_int@t+1
   818  0229  0871               	movf	?___awdiv,w
   819  022A  00FA               	movwf	display_int@t
   820                           
   821                           ;newmain.c: 118: bcd.digit3 = t%10;
   822  022B  300A               	movlw	10
   823  022C  00F1               	movwf	___awmod@divisor
   824  022D  3000               	movlw	0
   825  022E  00F2               	movwf	___awmod@divisor+1
   826  022F  087B               	movf	display_int@t+1,w
   827  0230  00F4               	movwf	___awmod@dividend+1
   828  0231  087A               	movf	display_int@t,w
   829  0232  00F3               	movwf	___awmod@dividend
   830  0233  3182  2297  3181   	fcall	___awmod
   831  0236  0871               	movf	?___awmod,w
   832  0237  00FC               	movwf	??_display_int
   833  0238  0EFC               	swapf	??_display_int,f
   834  0239  0020               	movlb	0	; select bank0
   835  023A  0825               	movf	display_int@bcd+1,w
   836  023B  067C               	xorwf	??_display_int,w
   837  023C  390F               	andlw	-241
   838  023D  067C               	xorwf	??_display_int,w
   839  023E  00A5               	movwf	display_int@bcd+1
   840                           
   841                           ;newmain.c: 119: return(lcd_display_digits(bcd));
   842                           ;	Return value of _display_int is never used
   843  023F  0825               	movf	display_int@bcd+1,w
   844  0240  00F2               	movwf	lcd_display_digits@b+1
   845  0241  0824               	movf	display_int@bcd,w
   846  0242  00F1               	movwf	lcd_display_digits@b
   847  0243  3181  2141         	fcall	_lcd_display_digits
   848  0245  0008               	return
   849  0246                     __end_of_display_int:	
   850                           
   851                           	psect	text3
   852  0141                     __ptext3:	
   853 ;; *************** function _lcd_display_digits *****************
   854 ;; Defined at:
   855 ;;		line 122 in file "newmain.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  b               2    1[COMMON] struct .
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  val             1    4[COMMON] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      unsigned char 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   869 ;;      Params:         2       0       0       0       0       0       0       0
   870 ;;      Locals:         1       0       0       0       0       0       0       0
   871 ;;      Temps:          1       0       0       0       0       0       0       0
   872 ;;      Totals:         4       0       0       0       0       0       0       0
   873 ;;Total ram usage:        4 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_display_int
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _lcd_display_digits
   885  0141                     _lcd_display_digits:	
   886                           
   887                           ;newmain.c: 125: uint8_t val;
   888                           ;newmain.c: 127: if(WA)
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _lcd_display_digits: [wreg-fsr0h+status,2+status,0+pclath]
   892  0141  002F               	movlb	15	; select bank15
   893  0142  1E12               	btfss	18,4	;volatile
   894  0143  29C6               	goto	l1293
   895                           
   896                           ;newmain.c: 128: {
   897                           ;newmain.c: 129: val = segment_data[b.digit0].val;
   898  0144  0871               	movf	lcd_display_digits@b,w
   899  0145  390F               	andlw	15
   900  0146  3E3D               	addlw	low (_segment_data| (0+32768))
   901  0147  0084               	movwf	4
   902  0148  3083               	movlw	high (_segment_data| (0+32768))
   903  0149  1803               	skipnc
   904  014A  3E01               	addlw	1
   905  014B  0085               	movwf	5
   906  014C  0800               	movf	0,w	;code access
   907  014D  00F3               	movwf	??_lcd_display_digits
   908  014E  0873               	movf	??_lcd_display_digits,w
   909  014F  00F4               	movwf	lcd_display_digits@val
   910                           
   911                           ;newmain.c: 130: if(val & 0x01)
   912  0150  1874               	btfsc	lcd_display_digits@val,0
   913                           
   914                           ;newmain.c: 131: {
   915                           ;newmain.c: 132: SEG12COM0 = 1;
   916  0151  1621               	bsf	33,4	;volatile
   917                           
   918                           ;newmain.c: 133: }
   919                           ;newmain.c: 135: if(!(val & 0x01))
   920  0152  1C74               	btfss	lcd_display_digits@val,0
   921                           
   922                           ;newmain.c: 136: {
   923                           ;newmain.c: 137: SEG12COM0 = 0;
   924  0153  1221               	bcf	33,4	;volatile
   925                           
   926                           ;newmain.c: 138: }
   927                           ;newmain.c: 140: if(val & 0x02)
   928  0154  18F4               	btfsc	lcd_display_digits@val,1
   929                           
   930                           ;newmain.c: 141: {
   931                           ;newmain.c: 142: SEG16COM0 = 1;
   932  0155  1422               	bsf	34,0	;volatile
   933                           
   934                           ;newmain.c: 143: }
   935                           ;newmain.c: 145: if(!(val & 0x02))
   936  0156  1CF4               	btfss	lcd_display_digits@val,1
   937                           
   938                           ;newmain.c: 146: {
   939                           ;newmain.c: 147: SEG16COM0 = 0;
   940  0157  1022               	bcf	34,0	;volatile
   941                           
   942                           ;newmain.c: 148: }
   943                           ;newmain.c: 150: if(val & 0x04)
   944  0158  1974               	btfsc	lcd_display_digits@val,2
   945                           
   946                           ;newmain.c: 151: {
   947                           ;newmain.c: 152: SEG16COM2 = 1;
   948  0159  1428               	bsf	40,0	;volatile
   949                           
   950                           ;newmain.c: 153: }
   951                           ;newmain.c: 155: if(!(val & 0x04))
   952  015A  1D74               	btfss	lcd_display_digits@val,2
   953                           
   954                           ;newmain.c: 156: {
   955                           ;newmain.c: 157: SEG16COM2 = 0;
   956  015B  1028               	bcf	40,0	;volatile
   957                           
   958                           ;newmain.c: 158: }
   959                           ;newmain.c: 160: if(val & 0x08)
   960  015C  19F4               	btfsc	lcd_display_digits@val,3
   961                           
   962                           ;newmain.c: 161: {
   963                           ;newmain.c: 162: SEG12COM3 = 1;
   964  015D  162A               	bsf	42,4	;volatile
   965                           
   966                           ;newmain.c: 163: }
   967                           ;newmain.c: 165: if(!(val & 0x08))
   968  015E  1DF4               	btfss	lcd_display_digits@val,3
   969                           
   970                           ;newmain.c: 166: {
   971                           ;newmain.c: 167: SEG12COM3 = 0;
   972  015F  122A               	bcf	42,4	;volatile
   973                           
   974                           ;newmain.c: 168: }
   975                           ;newmain.c: 170: if(val & 0x10)
   976  0160  1A74               	btfsc	lcd_display_digits@val,4
   977                           
   978                           ;newmain.c: 171: {
   979                           ;newmain.c: 172: SEG12COM2 = 1;
   980  0161  1627               	bsf	39,4	;volatile
   981                           
   982                           ;newmain.c: 173: }
   983                           ;newmain.c: 175: if(!(val & 0x10))
   984  0162  1E74               	btfss	lcd_display_digits@val,4
   985                           
   986                           ;newmain.c: 176: {
   987                           ;newmain.c: 177: SEG12COM2 = 0;
   988  0163  1227               	bcf	39,4	;volatile
   989                           
   990                           ;newmain.c: 178: }
   991                           ;newmain.c: 180: if(val & 0x20)
   992  0164  1AF4               	btfsc	lcd_display_digits@val,5
   993                           
   994                           ;newmain.c: 181: {
   995                           ;newmain.c: 182: SEG12COM1 = 1;
   996  0165  1624               	bsf	36,4	;volatile
   997                           
   998                           ;newmain.c: 183: }
   999                           ;newmain.c: 185: if(!(val & 0x20))
  1000  0166  1EF4               	btfss	lcd_display_digits@val,5
  1001                           
  1002                           ;newmain.c: 186: {
  1003                           ;newmain.c: 187: SEG12COM1 = 0;
  1004  0167  1224               	bcf	36,4	;volatile
  1005                           
  1006                           ;newmain.c: 188: }
  1007                           ;newmain.c: 190: if(val & 0x40)
  1008  0168  1B74               	btfsc	lcd_display_digits@val,6
  1009                           
  1010                           ;newmain.c: 191: {
  1011                           ;newmain.c: 192: SEG16COM1 = 1;
  1012  0169  1425               	bsf	37,0	;volatile
  1013                           
  1014                           ;newmain.c: 193: }
  1015                           ;newmain.c: 195: if(!(val & 0x40))
  1016  016A  1F74               	btfss	lcd_display_digits@val,6
  1017                           
  1018                           ;newmain.c: 196: {
  1019                           ;newmain.c: 197: SEG16COM1 = 0;
  1020  016B  1025               	bcf	37,0	;volatile
  1021                           
  1022                           ;newmain.c: 198: }
  1023                           ;newmain.c: 200: val = segment_data[b.digit1].val;
  1024  016C  0E71               	swapf	lcd_display_digits@b,w
  1025  016D  390F               	andlw	15
  1026  016E  3E3D               	addlw	low (_segment_data| (0+32768))
  1027  016F  0084               	movwf	4
  1028  0170  3083               	movlw	high (_segment_data| (0+32768))
  1029  0171  1803               	skipnc
  1030  0172  3E01               	addlw	1
  1031  0173  0085               	movwf	5
  1032  0174  0800               	movf	0,w	;code access
  1033  0175  00F3               	movwf	??_lcd_display_digits
  1034  0176  0873               	movf	??_lcd_display_digits,w
  1035  0177  00F4               	movwf	lcd_display_digits@val
  1036                           
  1037                           ;newmain.c: 201: if(val & 0x01)
  1038  0178  1874               	btfsc	lcd_display_digits@val,0
  1039                           
  1040                           ;newmain.c: 202: {
  1041                           ;newmain.c: 203: SEG5COM0 = 1;
  1042  0179  16A0               	bsf	32,5	;volatile
  1043                           
  1044                           ;newmain.c: 204: }
  1045                           ;newmain.c: 206: if(!(val & 0x01))
  1046  017A  1C74               	btfss	lcd_display_digits@val,0
  1047                           
  1048                           ;newmain.c: 207: {
  1049                           ;newmain.c: 208: SEG5COM0 = 0;
  1050  017B  12A0               	bcf	32,5	;volatile
  1051                           
  1052                           ;newmain.c: 209: }
  1053                           ;newmain.c: 211: if(val & 0x02)
  1054  017C  18F4               	btfsc	lcd_display_digits@val,1
  1055                           
  1056                           ;newmain.c: 212: {
  1057                           ;newmain.c: 213: SEG10COM0 = 1;
  1058  017D  1521               	bsf	33,2	;volatile
  1059                           
  1060                           ;newmain.c: 214: }
  1061                           ;newmain.c: 216: if(!(val & 0x02))
  1062  017E  1CF4               	btfss	lcd_display_digits@val,1
  1063                           
  1064                           ;newmain.c: 217: {
  1065                           ;newmain.c: 218: SEG10COM0 = 0;
  1066  017F  1121               	bcf	33,2	;volatile
  1067                           
  1068                           ;newmain.c: 219: }
  1069                           ;newmain.c: 221: if(val & 0x04)
  1070  0180  1974               	btfsc	lcd_display_digits@val,2
  1071                           
  1072                           ;newmain.c: 222: {
  1073                           ;newmain.c: 223: SEG10COM2 = 1;
  1074  0181  1527               	bsf	39,2	;volatile
  1075                           
  1076                           ;newmain.c: 224: }
  1077                           ;newmain.c: 226: if(!(val & 0x04))
  1078  0182  1D74               	btfss	lcd_display_digits@val,2
  1079                           
  1080                           ;newmain.c: 227: {
  1081                           ;newmain.c: 228: SEG10COM2 = 0;
  1082  0183  1127               	bcf	39,2	;volatile
  1083                           
  1084                           ;newmain.c: 229: }
  1085                           ;newmain.c: 231: if(val & 0x08)
  1086  0184  19F4               	btfsc	lcd_display_digits@val,3
  1087                           
  1088                           ;newmain.c: 232: {
  1089                           ;newmain.c: 233: SEG5COM3 = 1;
  1090  0185  16A9               	bsf	41,5	;volatile
  1091                           
  1092                           ;newmain.c: 234: }
  1093                           ;newmain.c: 236: if(!(val & 0x08))
  1094  0186  1DF4               	btfss	lcd_display_digits@val,3
  1095                           
  1096                           ;newmain.c: 237: {
  1097                           ;newmain.c: 238: SEG5COM3 = 0;
  1098  0187  12A9               	bcf	41,5	;volatile
  1099                           
  1100                           ;newmain.c: 239: }
  1101                           ;newmain.c: 241: if(val & 0x10)
  1102  0188  1A74               	btfsc	lcd_display_digits@val,4
  1103                           
  1104                           ;newmain.c: 242: {
  1105                           ;newmain.c: 243: SEG5COM2 = 1;
  1106  0189  16A6               	bsf	38,5	;volatile
  1107                           
  1108                           ;newmain.c: 244: }
  1109                           ;newmain.c: 246: if(!(val & 0x10))
  1110  018A  1E74               	btfss	lcd_display_digits@val,4
  1111                           
  1112                           ;newmain.c: 247: {
  1113                           ;newmain.c: 248: SEG5COM2 = 0;
  1114  018B  12A6               	bcf	38,5	;volatile
  1115                           
  1116                           ;newmain.c: 249: }
  1117                           ;newmain.c: 251: if(val & 0x20)
  1118  018C  1AF4               	btfsc	lcd_display_digits@val,5
  1119                           
  1120                           ;newmain.c: 252: {
  1121                           ;newmain.c: 253: SEG5COM1 = 1;
  1122  018D  16A3               	bsf	35,5	;volatile
  1123                           
  1124                           ;newmain.c: 254: }
  1125                           ;newmain.c: 256: if(!(val & 0x20))
  1126  018E  1EF4               	btfss	lcd_display_digits@val,5
  1127                           
  1128                           ;newmain.c: 257: {
  1129                           ;newmain.c: 258: SEG5COM1 = 0;
  1130  018F  12A3               	bcf	35,5	;volatile
  1131                           
  1132                           ;newmain.c: 259: }
  1133                           ;newmain.c: 261: if(val & 0x40)
  1134  0190  1B74               	btfsc	lcd_display_digits@val,6
  1135                           
  1136                           ;newmain.c: 262: {
  1137                           ;newmain.c: 263: SEG10COM1 = 1;
  1138  0191  1524               	bsf	36,2	;volatile
  1139                           
  1140                           ;newmain.c: 264: }
  1141                           ;newmain.c: 266: if(!(val & 0x40))
  1142  0192  1F74               	btfss	lcd_display_digits@val,6
  1143                           
  1144                           ;newmain.c: 267: {
  1145                           ;newmain.c: 268: SEG10COM1 = 0;
  1146  0193  1124               	bcf	36,2	;volatile
  1147                           
  1148                           ;newmain.c: 269: }
  1149                           ;newmain.c: 271: val = segment_data[b.digit2].val;
  1150  0194  0872               	movf	lcd_display_digits@b+1,w
  1151  0195  390F               	andlw	15
  1152  0196  3E3D               	addlw	low (_segment_data| (0+32768))
  1153  0197  0084               	movwf	4
  1154  0198  3083               	movlw	high (_segment_data| (0+32768))
  1155  0199  1803               	skipnc
  1156  019A  3E01               	addlw	1
  1157  019B  0085               	movwf	5
  1158  019C  0800               	movf	0,w	;code access
  1159  019D  00F3               	movwf	??_lcd_display_digits
  1160  019E  0873               	movf	??_lcd_display_digits,w
  1161  019F  00F4               	movwf	lcd_display_digits@val
  1162                           
  1163                           ;newmain.c: 272: if(val & 0x01)
  1164  01A0  1874               	btfsc	lcd_display_digits@val,0
  1165                           
  1166                           ;newmain.c: 273: {
  1167                           ;newmain.c: 274: SEG2COM0 = 1;
  1168  01A1  1520               	bsf	32,2	;volatile
  1169                           
  1170                           ;newmain.c: 275: }
  1171                           ;newmain.c: 277: if(!(val & 0x01))
  1172  01A2  1C74               	btfss	lcd_display_digits@val,0
  1173                           
  1174                           ;newmain.c: 278: {
  1175                           ;newmain.c: 279: SEG2COM0 = 0;
  1176  01A3  1120               	bcf	32,2	;volatile
  1177                           
  1178                           ;newmain.c: 280: }
  1179                           ;newmain.c: 282: if(val & 0x02)
  1180  01A4  18F4               	btfsc	lcd_display_digits@val,1
  1181                           
  1182                           ;newmain.c: 283: {
  1183                           ;newmain.c: 284: SEG4COM0 = 1;
  1184  01A5  1620               	bsf	32,4	;volatile
  1185                           
  1186                           ;newmain.c: 285: }
  1187                           ;newmain.c: 287: if(!(val & 0x02))
  1188  01A6  1CF4               	btfss	lcd_display_digits@val,1
  1189                           
  1190                           ;newmain.c: 288: {
  1191                           ;newmain.c: 289: SEG4COM0 = 0;
  1192  01A7  1220               	bcf	32,4	;volatile
  1193                           
  1194                           ;newmain.c: 290: }
  1195                           ;newmain.c: 292: if(val & 0x04)
  1196  01A8  1974               	btfsc	lcd_display_digits@val,2
  1197                           
  1198                           ;newmain.c: 293: {
  1199                           ;newmain.c: 294: SEG4COM2 = 1;
  1200  01A9  1626               	bsf	38,4	;volatile
  1201                           
  1202                           ;newmain.c: 295: }
  1203                           ;newmain.c: 297: if(!(val & 0x04))
  1204  01AA  1D74               	btfss	lcd_display_digits@val,2
  1205                           
  1206                           ;newmain.c: 298: {
  1207                           ;newmain.c: 299: SEG4COM2 = 0;
  1208  01AB  1226               	bcf	38,4	;volatile
  1209                           
  1210                           ;newmain.c: 300: }
  1211                           ;newmain.c: 302: if(val & 0x08)
  1212  01AC  19F4               	btfsc	lcd_display_digits@val,3
  1213                           
  1214                           ;newmain.c: 303: {
  1215                           ;newmain.c: 304: SEG2COM3 = 1;
  1216  01AD  1529               	bsf	41,2	;volatile
  1217                           
  1218                           ;newmain.c: 305: }
  1219                           ;newmain.c: 307: if(!(val & 0x08))
  1220  01AE  1DF4               	btfss	lcd_display_digits@val,3
  1221                           
  1222                           ;newmain.c: 308: {
  1223                           ;newmain.c: 309: SEG2COM3 = 0;
  1224  01AF  1129               	bcf	41,2	;volatile
  1225                           
  1226                           ;newmain.c: 310: }
  1227                           ;newmain.c: 312: if(val & 0x10)
  1228  01B0  1A74               	btfsc	lcd_display_digits@val,4
  1229                           
  1230                           ;newmain.c: 313: {
  1231                           ;newmain.c: 314: SEG2COM2 = 1;
  1232  01B1  1526               	bsf	38,2	;volatile
  1233                           
  1234                           ;newmain.c: 315: }
  1235                           ;newmain.c: 317: if(!(val & 0x10))
  1236  01B2  1E74               	btfss	lcd_display_digits@val,4
  1237                           
  1238                           ;newmain.c: 318: {
  1239                           ;newmain.c: 319: SEG2COM2 = 0;
  1240  01B3  1126               	bcf	38,2	;volatile
  1241                           
  1242                           ;newmain.c: 320: }
  1243                           ;newmain.c: 322: if(val & 0x20)
  1244  01B4  1AF4               	btfsc	lcd_display_digits@val,5
  1245                           
  1246                           ;newmain.c: 323: {
  1247                           ;newmain.c: 324: SEG2COM1 = 1;
  1248  01B5  1523               	bsf	35,2	;volatile
  1249                           
  1250                           ;newmain.c: 325: }
  1251                           ;newmain.c: 327: if(!(val & 0x20))
  1252  01B6  1EF4               	btfss	lcd_display_digits@val,5
  1253                           
  1254                           ;newmain.c: 328: {
  1255                           ;newmain.c: 329: SEG2COM1 = 0;
  1256  01B7  1123               	bcf	35,2	;volatile
  1257                           
  1258                           ;newmain.c: 330: }
  1259                           ;newmain.c: 332: if(val & 0x40)
  1260  01B8  1B74               	btfsc	lcd_display_digits@val,6
  1261                           
  1262                           ;newmain.c: 333: {
  1263                           ;newmain.c: 334: SEG4COM1 = 1;
  1264  01B9  1623               	bsf	35,4	;volatile
  1265                           
  1266                           ;newmain.c: 335: }
  1267                           ;newmain.c: 337: if(!(val & 0x40))
  1268  01BA  1F74               	btfss	lcd_display_digits@val,6
  1269                           
  1270                           ;newmain.c: 338: {
  1271                           ;newmain.c: 339: SEG4COM1 = 0;
  1272  01BB  1223               	bcf	35,4	;volatile
  1273                           
  1274                           ;newmain.c: 340: }
  1275                           ;newmain.c: 342: if(b.digit3 > 0)
  1276  01BC  0E72               	swapf	lcd_display_digits@b+1,w
  1277  01BD  390F               	andlw	15
  1278  01BE  3A00               	xorlw	0
  1279  01BF  1903               	skipnz
  1280  01C0  29C3               	goto	l282
  1281                           
  1282                           ;newmain.c: 343: {
  1283                           ;newmain.c: 344: SEG1COM2 = 1;
  1284  01C1  14A6               	bsf	38,1	;volatile
  1285                           
  1286                           ;newmain.c: 345: }
  1287  01C2  29C4               	goto	l1289
  1288  01C3                     l282:	
  1289                           
  1290                           ;newmain.c: 346: else
  1291                           ;newmain.c: 347: {
  1292                           ;newmain.c: 348: SEG1COM2 = 0;
  1293  01C3  10A6               	bcf	38,1	;volatile
  1294  01C4                     l1289:	
  1295                           
  1296                           ;newmain.c: 349: }
  1297                           ;newmain.c: 351: return (1);
  1298  01C4  3001               	movlw	1
  1299  01C5  0008               	return
  1300  01C6                     l1293:	
  1301                           
  1302                           ;newmain.c: 352: }
  1303                           ;newmain.c: 354: return (0);
  1304  01C6  3000               	movlw	0
  1305  01C7  0008               	return
  1306  01C8                     __end_of_lcd_display_digits:	
  1307                           
  1308                           	psect	text4
  1309  0297                     __ptext4:	
  1310 ;; *************** function ___awmod *****************
  1311 ;; Defined at:
  1312 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  divisor         2    1[COMMON] int 
  1315 ;;  dividend        2    3[COMMON] int 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  sign            1    7[COMMON] unsigned char 
  1318 ;;  counter         1    6[COMMON] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2    1[COMMON] int 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1328 ;;      Params:         4       0       0       0       0       0       0       0
  1329 ;;      Locals:         2       0       0       0       0       0       0       0
  1330 ;;      Temps:          1       0       0       0       0       0       0       0
  1331 ;;      Totals:         7       0       0       0       0       0       0       0
  1332 ;;Total ram usage:        7 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_display_int
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function ___awmod
  1344  0297                     ___awmod:	
  1345                           
  1346                           ;incstack = 0
  1347                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1348  0297  01F7               	clrf	___awmod@sign
  1349  0298  1FF4               	btfss	___awmod@dividend+1,7
  1350  0299  2AA1               	goto	l1349
  1351  029A  09F3               	comf	___awmod@dividend,f
  1352  029B  09F4               	comf	___awmod@dividend+1,f
  1353  029C  0AF3               	incf	___awmod@dividend,f
  1354  029D  1903               	skipnz
  1355  029E  0AF4               	incf	___awmod@dividend+1,f
  1356  029F  01F7               	clrf	___awmod@sign
  1357  02A0  0AF7               	incf	___awmod@sign,f
  1358  02A1                     l1349:	
  1359  02A1  1FF2               	btfss	___awmod@divisor+1,7
  1360  02A2  2AA8               	goto	l1353
  1361  02A3  09F1               	comf	___awmod@divisor,f
  1362  02A4  09F2               	comf	___awmod@divisor+1,f
  1363  02A5  0AF1               	incf	___awmod@divisor,f
  1364  02A6  1903               	skipnz
  1365  02A7  0AF2               	incf	___awmod@divisor+1,f
  1366  02A8                     l1353:	
  1367  02A8  0871               	movf	___awmod@divisor,w
  1368  02A9  0472               	iorwf	___awmod@divisor+1,w
  1369  02AA  1903               	btfsc	3,2
  1370  02AB  2ACF               	goto	l1371
  1371  02AC  01F6               	clrf	___awmod@counter
  1372  02AD  0AF6               	incf	___awmod@counter,f
  1373  02AE                     l1361:	
  1374  02AE  1BF2               	btfsc	___awmod@divisor+1,7
  1375  02AF  2ABA               	goto	l1363
  1376  02B0  3001               	movlw	1
  1377  02B1                     u1615:	
  1378  02B1  35F1               	lslf	___awmod@divisor,f
  1379  02B2  0DF2               	rlf	___awmod@divisor+1,f
  1380  02B3  0B89               	decfsz	9,f
  1381  02B4  2AB1               	goto	u1615
  1382  02B5  3001               	movlw	1
  1383  02B6  00F5               	movwf	??___awmod
  1384  02B7  0875               	movf	??___awmod,w
  1385  02B8  07F6               	addwf	___awmod@counter,f
  1386  02B9  2AAE               	goto	l1361
  1387  02BA                     l1363:	
  1388  02BA  0872               	movf	___awmod@divisor+1,w
  1389  02BB  0274               	subwf	___awmod@dividend+1,w
  1390  02BC  1D03               	skipz
  1391  02BD  2AC0               	goto	u1635
  1392  02BE  0871               	movf	___awmod@divisor,w
  1393  02BF  0273               	subwf	___awmod@dividend,w
  1394  02C0                     u1635:	
  1395  02C0  1C03               	skipc
  1396  02C1  2AC6               	goto	l1367
  1397  02C2  0871               	movf	___awmod@divisor,w
  1398  02C3  02F3               	subwf	___awmod@dividend,f
  1399  02C4  0872               	movf	___awmod@divisor+1,w
  1400  02C5  3BF4               	subwfb	___awmod@dividend+1,f
  1401  02C6                     l1367:	
  1402  02C6  3001               	movlw	1
  1403  02C7                     u1645:	
  1404  02C7  36F2               	lsrf	___awmod@divisor+1,f
  1405  02C8  0CF1               	rrf	___awmod@divisor,f
  1406  02C9  0B89               	decfsz	9,f
  1407  02CA  2AC7               	goto	u1645
  1408  02CB  3001               	movlw	1
  1409  02CC  02F6               	subwf	___awmod@counter,f
  1410  02CD  1D03               	btfss	3,2
  1411  02CE  2ABA               	goto	l1363
  1412  02CF                     l1371:	
  1413  02CF  0877               	movf	___awmod@sign,w
  1414  02D0  1903               	btfsc	3,2
  1415  02D1  2AD7               	goto	l1375
  1416  02D2  09F3               	comf	___awmod@dividend,f
  1417  02D3  09F4               	comf	___awmod@dividend+1,f
  1418  02D4  0AF3               	incf	___awmod@dividend,f
  1419  02D5  1903               	skipnz
  1420  02D6  0AF4               	incf	___awmod@dividend+1,f
  1421  02D7                     l1375:	
  1422  02D7  0874               	movf	___awmod@dividend+1,w
  1423  02D8  00F2               	movwf	?___awmod+1
  1424  02D9  0873               	movf	___awmod@dividend,w
  1425  02DA  00F1               	movwf	?___awmod
  1426  02DB  0008               	return
  1427  02DC                     __end_of___awmod:	
  1428                           
  1429                           	psect	text5
  1430  0246                     __ptext5:	
  1431 ;; *************** function ___awdiv *****************
  1432 ;; Defined at:
  1433 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  divisor         2    1[COMMON] int 
  1436 ;;  dividend        2    3[COMMON] int 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  quotient        2    8[COMMON] int 
  1439 ;;  sign            1    7[COMMON] unsigned char 
  1440 ;;  counter         1    6[COMMON] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  2    1[COMMON] int 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1450 ;;      Params:         4       0       0       0       0       0       0       0
  1451 ;;      Locals:         4       0       0       0       0       0       0       0
  1452 ;;      Temps:          1       0       0       0       0       0       0       0
  1453 ;;      Totals:         9       0       0       0       0       0       0       0
  1454 ;;Total ram usage:        9 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_display_int
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function ___awdiv
  1466  0246                     ___awdiv:	
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1470  0246  01F7               	clrf	___awdiv@sign
  1471  0247  1FF2               	btfss	___awdiv@divisor+1,7
  1472  0248  2A50               	goto	l1305
  1473  0249  09F1               	comf	___awdiv@divisor,f
  1474  024A  09F2               	comf	___awdiv@divisor+1,f
  1475  024B  0AF1               	incf	___awdiv@divisor,f
  1476  024C  1903               	skipnz
  1477  024D  0AF2               	incf	___awdiv@divisor+1,f
  1478  024E  01F7               	clrf	___awdiv@sign
  1479  024F  0AF7               	incf	___awdiv@sign,f
  1480  0250                     l1305:	
  1481  0250  1FF4               	btfss	___awdiv@dividend+1,7
  1482  0251  2A5B               	goto	l1311
  1483  0252  09F3               	comf	___awdiv@dividend,f
  1484  0253  09F4               	comf	___awdiv@dividend+1,f
  1485  0254  0AF3               	incf	___awdiv@dividend,f
  1486  0255  1903               	skipnz
  1487  0256  0AF4               	incf	___awdiv@dividend+1,f
  1488  0257  3001               	movlw	1
  1489  0258  00F5               	movwf	??___awdiv
  1490  0259  0875               	movf	??___awdiv,w
  1491  025A  06F7               	xorwf	___awdiv@sign,f
  1492  025B                     l1311:	
  1493  025B  01F8               	clrf	___awdiv@quotient
  1494  025C  01F9               	clrf	___awdiv@quotient+1
  1495  025D  0871               	movf	___awdiv@divisor,w
  1496  025E  0472               	iorwf	___awdiv@divisor+1,w
  1497  025F  1903               	btfsc	3,2
  1498  0260  2A8A               	goto	l1333
  1499  0261  01F6               	clrf	___awdiv@counter
  1500  0262  0AF6               	incf	___awdiv@counter,f
  1501  0263                     l1321:	
  1502  0263  1BF2               	btfsc	___awdiv@divisor+1,7
  1503  0264  2A6F               	goto	l1323
  1504  0265  3001               	movlw	1
  1505  0266                     u1515:	
  1506  0266  35F1               	lslf	___awdiv@divisor,f
  1507  0267  0DF2               	rlf	___awdiv@divisor+1,f
  1508  0268  0B89               	decfsz	9,f
  1509  0269  2A66               	goto	u1515
  1510  026A  3001               	movlw	1
  1511  026B  00F5               	movwf	??___awdiv
  1512  026C  0875               	movf	??___awdiv,w
  1513  026D  07F6               	addwf	___awdiv@counter,f
  1514  026E  2A63               	goto	l1321
  1515  026F                     l1323:	
  1516  026F  3001               	movlw	1
  1517  0270                     u1535:	
  1518  0270  35F8               	lslf	___awdiv@quotient,f
  1519  0271  0DF9               	rlf	___awdiv@quotient+1,f
  1520  0272  0B89               	decfsz	9,f
  1521  0273  2A70               	goto	u1535
  1522  0274  0872               	movf	___awdiv@divisor+1,w
  1523  0275  0274               	subwf	___awdiv@dividend+1,w
  1524  0276  1D03               	skipz
  1525  0277  2A7A               	goto	u1545
  1526  0278  0871               	movf	___awdiv@divisor,w
  1527  0279  0273               	subwf	___awdiv@dividend,w
  1528  027A                     u1545:	
  1529  027A  1C03               	skipc
  1530  027B  2A81               	goto	l1329
  1531  027C  0871               	movf	___awdiv@divisor,w
  1532  027D  02F3               	subwf	___awdiv@dividend,f
  1533  027E  0872               	movf	___awdiv@divisor+1,w
  1534  027F  3BF4               	subwfb	___awdiv@dividend+1,f
  1535  0280  1478               	bsf	___awdiv@quotient,0
  1536  0281                     l1329:	
  1537  0281  3001               	movlw	1
  1538  0282                     u1555:	
  1539  0282  36F2               	lsrf	___awdiv@divisor+1,f
  1540  0283  0CF1               	rrf	___awdiv@divisor,f
  1541  0284  0B89               	decfsz	9,f
  1542  0285  2A82               	goto	u1555
  1543  0286  3001               	movlw	1
  1544  0287  02F6               	subwf	___awdiv@counter,f
  1545  0288  1D03               	btfss	3,2
  1546  0289  2A6F               	goto	l1323
  1547  028A                     l1333:	
  1548  028A  0877               	movf	___awdiv@sign,w
  1549  028B  1903               	btfsc	3,2
  1550  028C  2A92               	goto	l1337
  1551  028D  09F8               	comf	___awdiv@quotient,f
  1552  028E  09F9               	comf	___awdiv@quotient+1,f
  1553  028F  0AF8               	incf	___awdiv@quotient,f
  1554  0290  1903               	skipnz
  1555  0291  0AF9               	incf	___awdiv@quotient+1,f
  1556  0292                     l1337:	
  1557  0292  0879               	movf	___awdiv@quotient+1,w
  1558  0293  00F2               	movwf	?___awdiv+1
  1559  0294  0878               	movf	___awdiv@quotient,w
  1560  0295  00F1               	movwf	?___awdiv
  1561  0296  0008               	return
  1562  0297                     __end_of___awdiv:	
  1563                           
  1564                           	psect	text6
  1565  0034                     __ptext6:	
  1566 ;; *************** function _device_init *****************
  1567 ;; Defined at:
  1568 ;;		line 391 in file "newmain.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1582 ;;      Params:         0       0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    2
  1589 ;; This function calls:
  1590 ;;		_lcd_init
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _device_init
  1598  0034                     _device_init:	
  1599                           
  1600                           ;newmain.c: 393: T1CON = 0x84;
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _device_init: [wreg+status,2+status,0+pclath+cstack]
  1604  0034  3084               	movlw	132
  1605  0035  0020               	movlb	0	; select bank0
  1606  0036  0098               	movwf	24	;volatile
  1607                           
  1608                           ;newmain.c: 396: T1GCON = 0x00;
  1609  0037  0199               	clrf	25	;volatile
  1610                           
  1611                           ;newmain.c: 399: TMR1H = 0xF0;
  1612  0038  30F0               	movlw	240
  1613  0039  0097               	movwf	23	;volatile
  1614                           
  1615                           ;newmain.c: 402: TMR1L = 0x00;
  1616  003A  0196               	clrf	22	;volatile
  1617                           
  1618                           ;newmain.c: 405: PIR1bits.TMR1IF = 0;
  1619  003B  1011               	bcf	17,0	;volatile
  1620                           
  1621                           ;newmain.c: 406: PIE1bits.TMR1IE = 1;
  1622  003C  0021               	movlb	1	; select bank1
  1623  003D  1411               	bsf	17,0	;volatile
  1624                           
  1625                           ;newmain.c: 409: T1CONbits.TMR1ON = 1;
  1626  003E  0020               	movlb	0	; select bank0
  1627  003F  1418               	bsf	24,0	;volatile
  1628                           
  1629                           ;newmain.c: 411: OSCCON = 0xF0;
  1630  0040  30F0               	movlw	240
  1631  0041  0021               	movlb	1	; select bank1
  1632  0042  0099               	movwf	25	;volatile
  1633                           
  1634                           ;newmain.c: 412: PORTC = 0x00;
  1635  0043  0020               	movlb	0	; select bank0
  1636  0044  018E               	clrf	14	;volatile
  1637                           
  1638                           ;newmain.c: 413: PORTD = 0x00;
  1639  0045  018F               	clrf	15	;volatile
  1640                           
  1641                           ;newmain.c: 414: PORTE = 0x00;
  1642  0046  0190               	clrf	16	;volatile
  1643                           
  1644                           ;newmain.c: 415: TRISCbits.TRISC2 = 0;
  1645  0047  0021               	movlb	1	; select bank1
  1646  0048  110E               	bcf	14,2	;volatile
  1647                           
  1648                           ;newmain.c: 416: TRISEbits.TRISE0 = 0;
  1649  0049  1010               	bcf	16,0	;volatile
  1650                           
  1651                           ;newmain.c: 417: TRISEbits.TRISE1 = 0;
  1652  004A  1090               	bcf	16,1	;volatile
  1653                           
  1654                           ;newmain.c: 418: TRISEbits.TRISE2 = 0;
  1655  004B  1110               	bcf	16,2	;volatile
  1656                           
  1657                           ;newmain.c: 419: TRISDbits.TRISD1 = 0;
  1658  004C  108F               	bcf	15,1	;volatile
  1659                           
  1660                           ;newmain.c: 420: TRISDbits.TRISD2 = 1;
  1661  004D  150F               	bsf	15,2	;volatile
  1662                           
  1663                           ;newmain.c: 421: TRISDbits.TRISD5 = 0;
  1664  004E  128F               	bcf	15,5	;volatile
  1665                           
  1666                           ;newmain.c: 422: TRISDbits.TRISD6 = 0;
  1667  004F  130F               	bcf	15,6	;volatile
  1668                           
  1669                           ;newmain.c: 423: ANSELAbits.ANSA1 = 1;
  1670  0050  0023               	movlb	3	; select bank3
  1671  0051  148C               	bsf	12,1	;volatile
  1672                           
  1673                           ;newmain.c: 424: ANSELAbits.ANSA3 = 1;
  1674  0052  158C               	bsf	12,3	;volatile
  1675                           
  1676                           ;newmain.c: 425: ANSELBbits.ANSB3 = 1;
  1677  0053  158D               	bsf	13,3	;volatile
  1678                           
  1679                           ;newmain.c: 426: ANSELBbits.ANSB1 = 1;
  1680  0054  148D               	bsf	13,1	;volatile
  1681                           
  1682                           ;newmain.c: 427: ANSELDbits.ANSD2 = 0;
  1683  0055  110F               	bcf	15,2	;volatile
  1684                           
  1685                           ;newmain.c: 430: ADCON0 = 0x01;
  1686  0056  3001               	movlw	1
  1687  0057  0021               	movlb	1	; select bank1
  1688  0058  009D               	movwf	29	;volatile
  1689                           
  1690                           ;newmain.c: 431: ADCON1 = 0x80;
  1691  0059  3080               	movlw	128
  1692  005A  009E               	movwf	30	;volatile
  1693                           
  1694                           ;newmain.c: 432: ADRESL = 0x00;
  1695  005B  019B               	clrf	27	;volatile
  1696                           
  1697                           ;newmain.c: 433: ADRESH = 0x00;
  1698  005C  019C               	clrf	28	;volatile
  1699                           
  1700                           ;newmain.c: 434: ADCON0bits.ADON = 1;
  1701  005D  141D               	bsf	29,0	;volatile
  1702                           
  1703                           ;newmain.c: 436: lcd_init();
  1704  005E  3182  22DC  3180   	fcall	_lcd_init
  1705                           
  1706                           ;newmain.c: 438: LCDIE = 0;
  1707  0061  0021               	movlb	1	; select bank1
  1708  0062  1112               	bcf	18,2	;volatile
  1709                           
  1710                           ;newmain.c: 439: PEIE = 1;
  1711  0063  170B               	bsf	11,6	;volatile
  1712                           
  1713                           ;newmain.c: 440: GIE = 1;
  1714  0064  178B               	bsf	11,7	;volatile
  1715                           
  1716                           ;newmain.c: 443: SEG20COM0 = 1;
  1717  0065  002F               	movlb	15	; select bank15
  1718  0066  1622               	bsf	34,4	;volatile
  1719                           
  1720                           ;newmain.c: 444: SEG20COM1 = 1;
  1721  0067  1625               	bsf	37,4	;volatile
  1722                           
  1723                           ;newmain.c: 445: SEG20COM2 = 1;
  1724  0068  1628               	bsf	40,4	;volatile
  1725                           
  1726                           ;newmain.c: 446: SEG20COM3 = 1;
  1727  0069  162B               	bsf	43,4	;volatile
  1728                           
  1729                           ;newmain.c: 447: SEG17COM0 = 1;
  1730  006A  14A2               	bsf	34,1	;volatile
  1731                           
  1732                           ;newmain.c: 448: SEG17COM1 = 1;
  1733  006B  14A5               	bsf	37,1	;volatile
  1734                           
  1735                           ;newmain.c: 449: SEG17COM2 = 1;
  1736  006C  14A8               	bsf	40,1	;volatile
  1737                           
  1738                           ;newmain.c: 450: SEG17COM3 = 1;
  1739  006D  14AB               	bsf	43,1	;volatile
  1740                           
  1741                           ;newmain.c: 451: SEG16COM0 = SEG16COM1 = SEG16COM2 = 1;
  1742  006E  1428               	bsf	40,0	;volatile
  1743  006F  1C28               	btfss	40,0	;volatile
  1744  0070  2874               	goto	u1670
  1745  0071  002F               	movlb	15	; select bank15
  1746  0072  1425               	bsf	37,0	;volatile
  1747  0073  2876               	goto	u1684
  1748  0074                     u1670:	
  1749  0074  002F               	movlb	15	; select bank15
  1750  0075  1025               	bcf	37,0	;volatile
  1751  0076                     u1684:	
  1752  0076  1C25               	btfss	37,0	;volatile
  1753  0077  287B               	goto	u1680
  1754  0078  002F               	movlb	15	; select bank15
  1755  0079  1422               	bsf	34,0	;volatile
  1756  007A  287D               	goto	l1527
  1757  007B                     u1680:	
  1758  007B  002F               	movlb	15	; select bank15
  1759  007C  1022               	bcf	34,0	;volatile
  1760  007D                     l1527:	
  1761                           
  1762                           ;newmain.c: 452: SEG12COM0 = SEG12COM1 = SEG12COM2 = SEG12COM3 = 1;
  1763  007D  162A               	bsf	42,4	;volatile
  1764  007E  1E2A               	btfss	42,4	;volatile
  1765  007F  2883               	goto	u1700
  1766  0080  002F               	movlb	15	; select bank15
  1767  0081  1627               	bsf	39,4	;volatile
  1768  0082  2885               	goto	u1714
  1769  0083                     u1700:	
  1770  0083  002F               	movlb	15	; select bank15
  1771  0084  1227               	bcf	39,4	;volatile
  1772  0085                     u1714:	
  1773  0085  1E27               	btfss	39,4	;volatile
  1774  0086  288A               	goto	u1710
  1775  0087  002F               	movlb	15	; select bank15
  1776  0088  1624               	bsf	36,4	;volatile
  1777  0089  288C               	goto	u1724
  1778  008A                     u1710:	
  1779  008A  002F               	movlb	15	; select bank15
  1780  008B  1224               	bcf	36,4	;volatile
  1781  008C                     u1724:	
  1782  008C  1E24               	btfss	36,4	;volatile
  1783  008D  2891               	goto	u1720
  1784  008E  002F               	movlb	15	; select bank15
  1785  008F  1621               	bsf	33,4	;volatile
  1786  0090  2893               	goto	l1529
  1787  0091                     u1720:	
  1788  0091  002F               	movlb	15	; select bank15
  1789  0092  1221               	bcf	33,4	;volatile
  1790  0093                     l1529:	
  1791                           
  1792                           ;newmain.c: 453: SEG10COM0 = SEG10COM1 = SEG10COM2 = SEG10COM3 = 1;
  1793  0093  152A               	bsf	42,2	;volatile
  1794  0094  1D2A               	btfss	42,2	;volatile
  1795  0095  2899               	goto	u1740
  1796  0096  002F               	movlb	15	; select bank15
  1797  0097  1527               	bsf	39,2	;volatile
  1798  0098  289B               	goto	u1754
  1799  0099                     u1740:	
  1800  0099  002F               	movlb	15	; select bank15
  1801  009A  1127               	bcf	39,2	;volatile
  1802  009B                     u1754:	
  1803  009B  1D27               	btfss	39,2	;volatile
  1804  009C  28A0               	goto	u1750
  1805  009D  002F               	movlb	15	; select bank15
  1806  009E  1524               	bsf	36,2	;volatile
  1807  009F  28A2               	goto	u1764
  1808  00A0                     u1750:	
  1809  00A0  002F               	movlb	15	; select bank15
  1810  00A1  1124               	bcf	36,2	;volatile
  1811  00A2                     u1764:	
  1812  00A2  1D24               	btfss	36,2	;volatile
  1813  00A3  28A7               	goto	u1760
  1814  00A4  002F               	movlb	15	; select bank15
  1815  00A5  1521               	bsf	33,2	;volatile
  1816  00A6  28A9               	goto	l1531
  1817  00A7                     u1760:	
  1818  00A7  002F               	movlb	15	; select bank15
  1819  00A8  1121               	bcf	33,2	;volatile
  1820  00A9                     l1531:	
  1821                           
  1822                           ;newmain.c: 454: SEG5COM3 = SEG5COM2 = SEG5COM1 = SEG5COM0 = 1;
  1823  00A9  16A0               	bsf	32,5	;volatile
  1824  00AA  1EA0               	btfss	32,5	;volatile
  1825  00AB  28AF               	goto	u1780
  1826  00AC  002F               	movlb	15	; select bank15
  1827  00AD  16A3               	bsf	35,5	;volatile
  1828  00AE  28B1               	goto	u1794
  1829  00AF                     u1780:	
  1830  00AF  002F               	movlb	15	; select bank15
  1831  00B0  12A3               	bcf	35,5	;volatile
  1832  00B1                     u1794:	
  1833  00B1  1EA3               	btfss	35,5	;volatile
  1834  00B2  28B6               	goto	u1790
  1835  00B3  002F               	movlb	15	; select bank15
  1836  00B4  16A6               	bsf	38,5	;volatile
  1837  00B5  28B8               	goto	u1804
  1838  00B6                     u1790:	
  1839  00B6  002F               	movlb	15	; select bank15
  1840  00B7  12A6               	bcf	38,5	;volatile
  1841  00B8                     u1804:	
  1842  00B8  1EA6               	btfss	38,5	;volatile
  1843  00B9  28BD               	goto	u1800
  1844  00BA  002F               	movlb	15	; select bank15
  1845  00BB  16A9               	bsf	41,5	;volatile
  1846  00BC  28BF               	goto	l1533
  1847  00BD                     u1800:	
  1848  00BD  002F               	movlb	15	; select bank15
  1849  00BE  12A9               	bcf	41,5	;volatile
  1850  00BF                     l1533:	
  1851                           
  1852                           ;newmain.c: 455: SEG4COM3 = SEG4COM2 = SEG4COM1 = SEG4COM0 = 1;
  1853  00BF  1620               	bsf	32,4	;volatile
  1854  00C0  1E20               	btfss	32,4	;volatile
  1855  00C1  28C5               	goto	u1820
  1856  00C2  002F               	movlb	15	; select bank15
  1857  00C3  1623               	bsf	35,4	;volatile
  1858  00C4  28C7               	goto	u1834
  1859  00C5                     u1820:	
  1860  00C5  002F               	movlb	15	; select bank15
  1861  00C6  1223               	bcf	35,4	;volatile
  1862  00C7                     u1834:	
  1863  00C7  1E23               	btfss	35,4	;volatile
  1864  00C8  28CC               	goto	u1830
  1865  00C9  002F               	movlb	15	; select bank15
  1866  00CA  1626               	bsf	38,4	;volatile
  1867  00CB  28CE               	goto	u1844
  1868  00CC                     u1830:	
  1869  00CC  002F               	movlb	15	; select bank15
  1870  00CD  1226               	bcf	38,4	;volatile
  1871  00CE                     u1844:	
  1872  00CE  1E26               	btfss	38,4	;volatile
  1873  00CF  28D3               	goto	u1840
  1874  00D0  002F               	movlb	15	; select bank15
  1875  00D1  1629               	bsf	41,4	;volatile
  1876  00D2  28D5               	goto	l1535
  1877  00D3                     u1840:	
  1878  00D3  002F               	movlb	15	; select bank15
  1879  00D4  1229               	bcf	41,4	;volatile
  1880  00D5                     l1535:	
  1881                           
  1882                           ;newmain.c: 456: SEG2COM3 = SEG2COM2 = SEG2COM1 = SEG2COM0 = 1;
  1883  00D5  1520               	bsf	32,2	;volatile
  1884  00D6  1D20               	btfss	32,2	;volatile
  1885  00D7  28DB               	goto	u1860
  1886  00D8  002F               	movlb	15	; select bank15
  1887  00D9  1523               	bsf	35,2	;volatile
  1888  00DA  28DD               	goto	u1874
  1889  00DB                     u1860:	
  1890  00DB  002F               	movlb	15	; select bank15
  1891  00DC  1123               	bcf	35,2	;volatile
  1892  00DD                     u1874:	
  1893  00DD  1D23               	btfss	35,2	;volatile
  1894  00DE  28E2               	goto	u1870
  1895  00DF  002F               	movlb	15	; select bank15
  1896  00E0  1526               	bsf	38,2	;volatile
  1897  00E1  28E4               	goto	u1884
  1898  00E2                     u1870:	
  1899  00E2  002F               	movlb	15	; select bank15
  1900  00E3  1126               	bcf	38,2	;volatile
  1901  00E4                     u1884:	
  1902  00E4  1D26               	btfss	38,2	;volatile
  1903  00E5  28E9               	goto	u1880
  1904  00E6  002F               	movlb	15	; select bank15
  1905  00E7  1529               	bsf	41,2	;volatile
  1906  00E8  28EB               	goto	l1537
  1907  00E9                     u1880:	
  1908  00E9  002F               	movlb	15	; select bank15
  1909  00EA  1129               	bcf	41,2	;volatile
  1910  00EB                     l1537:	
  1911                           
  1912                           ;newmain.c: 457: SEG1COM3 = SEG1COM2 = SEG1COM1 = SEG1COM0 = 1;
  1913  00EB  14A0               	bsf	32,1	;volatile
  1914  00EC  1CA0               	btfss	32,1	;volatile
  1915  00ED  28F1               	goto	u1900
  1916  00EE  002F               	movlb	15	; select bank15
  1917  00EF  14A3               	bsf	35,1	;volatile
  1918  00F0  28F3               	goto	u1914
  1919  00F1                     u1900:	
  1920  00F1  002F               	movlb	15	; select bank15
  1921  00F2  10A3               	bcf	35,1	;volatile
  1922  00F3                     u1914:	
  1923  00F3  1CA3               	btfss	35,1	;volatile
  1924  00F4  28F8               	goto	u1910
  1925  00F5  002F               	movlb	15	; select bank15
  1926  00F6  14A6               	bsf	38,1	;volatile
  1927  00F7  28FA               	goto	u1924
  1928  00F8                     u1910:	
  1929  00F8  002F               	movlb	15	; select bank15
  1930  00F9  10A6               	bcf	38,1	;volatile
  1931  00FA                     u1924:	
  1932  00FA  1CA6               	btfss	38,1	;volatile
  1933  00FB  28FF               	goto	u1920
  1934  00FC  002F               	movlb	15	; select bank15
  1935  00FD  14A9               	bsf	41,1	;volatile
  1936  00FE  2901               	goto	l1539
  1937  00FF                     u1920:	
  1938  00FF  002F               	movlb	15	; select bank15
  1939  0100  10A9               	bcf	41,1	;volatile
  1940  0101                     l1539:	
  1941                           
  1942                           ;newmain.c: 458: SEG0COM3 = SEG0COM2 = SEG0COM1 = SEG0COM0 = 1;
  1943  0101  1420               	bsf	32,0	;volatile
  1944  0102  1C20               	btfss	32,0	;volatile
  1945  0103  2907               	goto	u1940
  1946  0104  002F               	movlb	15	; select bank15
  1947  0105  1423               	bsf	35,0	;volatile
  1948  0106  2909               	goto	u1954
  1949  0107                     u1940:	
  1950  0107  002F               	movlb	15	; select bank15
  1951  0108  1023               	bcf	35,0	;volatile
  1952  0109                     u1954:	
  1953  0109  1C23               	btfss	35,0	;volatile
  1954  010A  290E               	goto	u1950
  1955  010B  002F               	movlb	15	; select bank15
  1956  010C  1426               	bsf	38,0	;volatile
  1957  010D  2910               	goto	u1964
  1958  010E                     u1950:	
  1959  010E  002F               	movlb	15	; select bank15
  1960  010F  1026               	bcf	38,0	;volatile
  1961  0110                     u1964:	
  1962  0110  1C26               	btfss	38,0	;volatile
  1963  0111  2915               	goto	u1960
  1964  0112  002F               	movlb	15	; select bank15
  1965  0113  1429               	bsf	41,0	;volatile
  1966  0114  2917               	goto	l298
  1967  0115                     u1960:	
  1968  0115  002F               	movlb	15	; select bank15
  1969  0116  1029               	bcf	41,0	;volatile
  1970  0117                     l298:	
  1971                           ;newmain.c: 461: while(!WA);
  1972                           
  1973  0117  1E12               	btfss	18,4	;volatile
  1974  0118  2917               	goto	l298
  1975                           
  1976                           ;newmain.c: 463: SEG20COM0 = 0;
  1977  0119  1222               	bcf	34,4	;volatile
  1978                           
  1979                           ;newmain.c: 464: SEG20COM1 = 0;
  1980  011A  1225               	bcf	37,4	;volatile
  1981                           
  1982                           ;newmain.c: 465: SEG20COM2 = 0;
  1983  011B  1228               	bcf	40,4	;volatile
  1984                           
  1985                           ;newmain.c: 466: SEG20COM3 = 0;
  1986  011C  122B               	bcf	43,4	;volatile
  1987                           
  1988                           ;newmain.c: 467: SEG17COM0 = 0;
  1989  011D  10A2               	bcf	34,1	;volatile
  1990                           
  1991                           ;newmain.c: 468: SEG17COM1 = 0;
  1992  011E  10A5               	bcf	37,1	;volatile
  1993                           
  1994                           ;newmain.c: 469: SEG17COM2 = 0;
  1995  011F  10A8               	bcf	40,1	;volatile
  1996                           
  1997                           ;newmain.c: 470: SEG17COM3 = 0;
  1998  0120  10AB               	bcf	43,1	;volatile
  1999                           
  2000                           ;newmain.c: 471: SEG16COM0 = SEG16COM1 = SEG16COM2 = 0;
  2001  0121  1028               	bcf	40,0	;volatile
  2002  0122  1025               	bcf	37,0	;volatile
  2003  0123  1022               	bcf	34,0	;volatile
  2004                           
  2005                           ;newmain.c: 472: SEG12COM0 = SEG12COM1 = SEG12COM2 = SEG12COM3 = 0;
  2006  0124  122A               	bcf	42,4	;volatile
  2007  0125  1227               	bcf	39,4	;volatile
  2008  0126  1224               	bcf	36,4	;volatile
  2009  0127  1221               	bcf	33,4	;volatile
  2010                           
  2011                           ;newmain.c: 473: SEG10COM0 = SEG10COM1 = SEG10COM2 = SEG10COM3 = 0;
  2012  0128  112A               	bcf	42,2	;volatile
  2013  0129  1127               	bcf	39,2	;volatile
  2014  012A  1124               	bcf	36,2	;volatile
  2015  012B  1121               	bcf	33,2	;volatile
  2016                           
  2017                           ;newmain.c: 474: SEG5COM3 = SEG5COM2 = SEG5COM1 = SEG5COM0 = 0;
  2018  012C  12A0               	bcf	32,5	;volatile
  2019  012D  12A3               	bcf	35,5	;volatile
  2020  012E  12A6               	bcf	38,5	;volatile
  2021  012F  12A9               	bcf	41,5	;volatile
  2022                           
  2023                           ;newmain.c: 475: SEG4COM3 = SEG4COM2 = SEG4COM1 = SEG4COM0 = 0;
  2024  0130  1220               	bcf	32,4	;volatile
  2025  0131  1223               	bcf	35,4	;volatile
  2026  0132  1226               	bcf	38,4	;volatile
  2027  0133  1229               	bcf	41,4	;volatile
  2028                           
  2029                           ;newmain.c: 476: SEG2COM3 = SEG2COM2 = SEG2COM1 = SEG2COM0 = 0;
  2030  0134  1120               	bcf	32,2	;volatile
  2031  0135  1123               	bcf	35,2	;volatile
  2032  0136  1126               	bcf	38,2	;volatile
  2033  0137  1129               	bcf	41,2	;volatile
  2034                           
  2035                           ;newmain.c: 477: SEG1COM3 = SEG1COM2 = SEG1COM1 = SEG1COM0 = 0;
  2036  0138  10A0               	bcf	32,1	;volatile
  2037  0139  10A3               	bcf	35,1	;volatile
  2038  013A  10A6               	bcf	38,1	;volatile
  2039  013B  10A9               	bcf	41,1	;volatile
  2040                           
  2041                           ;newmain.c: 478: SEG0COM3 = SEG0COM2 = SEG0COM1 = SEG0COM0 = 0;
  2042  013C  1020               	bcf	32,0	;volatile
  2043  013D  1023               	bcf	35,0	;volatile
  2044  013E  1026               	bcf	38,0	;volatile
  2045  013F  1029               	bcf	41,0	;volatile
  2046  0140  0008               	return
  2047  0141                     __end_of_device_init:	
  2048                           
  2049                           	psect	text7
  2050  02DC                     __ptext7:	
  2051 ;; *************** function _lcd_init *****************
  2052 ;; Defined at:
  2053 ;;		line 28 in file "newmain.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2067 ;;      Params:         0       0       0       0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_device_init
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _lcd_init
  2083  02DC                     _lcd_init:	
  2084                           
  2085                           ;newmain.c: 31: LCDPS = 0;
  2086                           
  2087                           ;incstack = 0
  2088                           ; Regs used in _lcd_init: [wreg+status,2+status,0]
  2089  02DC  002F               	movlb	15	; select bank15
  2090  02DD  0192               	clrf	18	;volatile
  2091                           
  2092                           ;newmain.c: 32: WFT = 1;
  2093  02DE  1792               	bsf	18,7	;volatile
  2094                           
  2095                           ;newmain.c: 33: LCDPSbits.LP = 0;
  2096  02DF  30F0               	movlw	-16
  2097  02E0  0592               	andwf	18,f	;volatile
  2098                           
  2099                           ;newmain.c: 34: T1OSCEN = 1;
  2100  02E1  0020               	movlb	0	; select bank0
  2101  02E2  1598               	bsf	24,3	;volatile
  2102                           
  2103                           ;newmain.c: 40: LCDSE0 = 0x37;
  2104  02E3  3037               	movlw	55
  2105  02E4  002F               	movlb	15	; select bank15
  2106  02E5  0098               	movwf	24	;volatile
  2107                           
  2108                           ;newmain.c: 41: LCDSE1 = 0x14;
  2109  02E6  3014               	movlw	20
  2110  02E7  0099               	movwf	25	;volatile
  2111                           
  2112                           ;newmain.c: 42: LCDSE2 = 0x13;
  2113  02E8  3013               	movlw	19
  2114  02E9  009A               	movwf	26	;volatile
  2115                           
  2116                           ;newmain.c: 47: LCDCON = 0;
  2117  02EA  0191               	clrf	17	;volatile
  2118                           
  2119                           ;newmain.c: 48: SLPEN = 0;
  2120  02EB  1311               	bcf	17,6	;volatile
  2121                           
  2122                           ;newmain.c: 49: WERR = 0;
  2123  02EC  1291               	bcf	17,5	;volatile
  2124                           
  2125                           ;newmain.c: 50: LCDCONbits.CS = 1;
  2126  02ED  0811               	movf	17,w	;volatile
  2127  02EE  39F3               	andlw	-13
  2128  02EF  3804               	iorlw	4
  2129  02F0  0091               	movwf	17	;volatile
  2130                           
  2131                           ;newmain.c: 51: LCDCONbits.LMUX = 3;
  2132  02F1  3003               	movlw	3
  2133  02F2  0491               	iorwf	17,f	;volatile
  2134                           
  2135                           ;newmain.c: 54: LCDDATA0 = 0;
  2136  02F3  01A0               	clrf	32	;volatile
  2137                           
  2138                           ;newmain.c: 55: LCDDATA1 = 0;
  2139  02F4  01A1               	clrf	33	;volatile
  2140                           
  2141                           ;newmain.c: 56: LCDDATA2 = 0;
  2142  02F5  01A2               	clrf	34	;volatile
  2143                           
  2144                           ;newmain.c: 57: LCDDATA3 = 0;
  2145  02F6  01A3               	clrf	35	;volatile
  2146                           
  2147                           ;newmain.c: 58: LCDDATA4 = 0;
  2148  02F7  01A4               	clrf	36	;volatile
  2149                           
  2150                           ;newmain.c: 59: LCDDATA5 = 0;
  2151  02F8  01A5               	clrf	37	;volatile
  2152                           
  2153                           ;newmain.c: 60: LCDDATA6 = 0;
  2154  02F9  01A6               	clrf	38	;volatile
  2155                           
  2156                           ;newmain.c: 61: LCDDATA7 = 0;
  2157  02FA  01A7               	clrf	39	;volatile
  2158                           
  2159                           ;newmain.c: 62: LCDDATA8 = 0;
  2160  02FB  01A8               	clrf	40	;volatile
  2161                           
  2162                           ;newmain.c: 63: LCDDATA9 = 0;
  2163  02FC  01A9               	clrf	41	;volatile
  2164                           
  2165                           ;newmain.c: 64: LCDDATA10 = 0;
  2166  02FD  01AA               	clrf	42	;volatile
  2167                           
  2168                           ;newmain.c: 65: LCDDATA11 = 0;
  2169  02FE  01AB               	clrf	43	;volatile
  2170                           
  2171                           ;newmain.c: 67: LCDIF = 0;
  2172  02FF  0020               	movlb	0	; select bank0
  2173  0300  1112               	bcf	18,2	;volatile
  2174                           
  2175                           ;newmain.c: 70: LCDRL = 0x30;
  2176  0301  3030               	movlw	48
  2177  0302  002F               	movlb	15	; select bank15
  2178  0303  0095               	movwf	21	;volatile
  2179                           
  2180                           ;newmain.c: 74: LCDREF = 0;
  2181  0304  0193               	clrf	19	;volatile
  2182                           
  2183                           ;newmain.c: 75: LCDIRE = 1;
  2184  0305  1793               	bsf	19,7	;volatile
  2185                           
  2186                           ;newmain.c: 76: LCDIRS = 0;
  2187  0306  1313               	bcf	19,6	;volatile
  2188                           
  2189                           ;newmain.c: 77: LCDIRI = 0;
  2190  0307  1293               	bcf	19,5	;volatile
  2191                           
  2192                           ;newmain.c: 78: LCDCST = 0;
  2193  0308  0194               	clrf	20	;volatile
  2194                           
  2195                           ;newmain.c: 79: LCDEN = 1;
  2196  0309  1791               	bsf	17,7	;volatile
  2197  030A  0008               	return
  2198  030B                     __end_of_lcd_init:	
  2199                           
  2200                           	psect	intentry
  2201  0004                     __pintentry:	
  2202 ;; *************** function _isr *****************
  2203 ;; Defined at:
  2204 ;;		line 357 in file "newmain.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2218 ;;      Params:         0       0       0       0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0
  2220 ;;      Temps:          1       0       0       0       0       0       0       0
  2221 ;;      Totals:         1       0       0       0       0       0       0       0
  2222 ;;Total ram usage:        1 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		Interrupt level 1
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231  0004                     _isr:	
  2232                           
  2233                           ;incstack = 0
  2234  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2235                           
  2236                           ; Regs used in _isr: [wreg+status,2]
  2237  0005  3180               	pagesel	$
  2238  0006  0020               	movlb	0	; select bank0
  2239  0007  087F               	movf	127,w
  2240  0008  00F0               	movwf	??_isr
  2241                           
  2242                           ;newmain.c: 358: if (PIE1bits.TMR1IE && PIR1bits.TMR1IF){
  2243  0009  0021               	movlb	1	; select bank1
  2244  000A  1C11               	btfss	17,0	;volatile
  2245  000B  281E               	goto	i1l290
  2246  000C  0020               	movlb	0	; select bank0
  2247  000D  1C11               	btfss	17,0	;volatile
  2248  000E  281E               	goto	i1l290
  2249                           
  2250                           ;newmain.c: 359: if (temp >= 0x400)
  2251  000F  3004               	movlw	4
  2252  0010  0223               	subwf	_temp+1,w
  2253  0011  3000               	movlw	0
  2254  0012  1903               	skipnz
  2255  0013  0222               	subwf	_temp,w
  2256  0014  1C03               	skipc
  2257  0015  2819               	goto	i1l1587
  2258                           
  2259                           ;newmain.c: 360: temp = 0;
  2260  0016  01A2               	clrf	_temp
  2261  0017  01A3               	clrf	_temp+1
  2262  0018  281D               	goto	i1l1589
  2263  0019                     i1l1587:	
  2264                           
  2265                           ;newmain.c: 361: else
  2266                           ;newmain.c: 362: temp++;
  2267  0019  3001               	movlw	1
  2268  001A  07A2               	addwf	_temp,f
  2269  001B  3000               	movlw	0
  2270  001C  3DA3               	addwfc	_temp+1,f
  2271  001D                     i1l1589:	
  2272                           
  2273                           ;newmain.c: 363: PIR1bits.TMR1IF = 0;
  2274  001D  1011               	bcf	17,0	;volatile
  2275  001E                     i1l290:	
  2276  001E  0870               	movf	??_isr,w
  2277  001F  0020               	movlb	0	; select bank0
  2278  0020  00FF               	movwf	127
  2279  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2280  0022  0009               	retfie
  2281  0023                     __end_of_isr:	
  2282  007E                     btemp	set	126	;btemp
  2283  007E                     int$flags	set	126
  2284  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      4      10
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _display_pot->_display_int
    _display_int->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_display_pot
    _display_pot->_display_int

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3154
                        _device_init
                        _display_pot
 ---------------------------------------------------------------------------------
 (1) _display_pot                                          2     0      2    3154
                                              2 BANK0      2     0      2
                        _display_int
 ---------------------------------------------------------------------------------
 (2) _display_int                                          5     3      2    3056
                                             10 COMMON     3     1      2
                                              0 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                 _lcd_display_digits
 ---------------------------------------------------------------------------------
 (3) _lcd_display_digits                                   4     2      2    1093
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _device_init                                          0     0      0       0
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _device_init
     _lcd_init
   _display_pot
     _display_int
       ___awdiv
       ___awmod
       _lcd_display_digits

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       A       6       12.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      17      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Jan 17 17:34:26 2017

                __CFG_CP$OFF 0000                 ?_display_int 007A                 ?_display_pot 0026  
                         _WA 3C94                 ___awdiv@sign 0077                  __CFG_LVP$ON 0000  
                        l282 01C3                          l298 0117                          _GIE 005F  
               __CFG_CPD$OFF 0000                          _WFT 3C97                          _isr 0004  
               ___awmod@sign 0077                 __CFG_BORV$LO 0000                          wreg 0009  
                       l1311 025B                         l1321 0263                         l1305 0250  
                       l1323 026F                         l1333 028A                         l1337 0292  
                       l1329 0281                         l1361 02AE                         l1353 02A8  
                       l1531 00A9                         l1363 02BA                         l1371 02CF  
                       l1533 00BF                         l1349 02A1                         l1293 01C6  
                       l1535 00D5                         l1527 007D                         l1375 02D7  
                       l1367 02C6                         l1537 00EB                         l1529 0093  
                       l1289 01C4                         l1539 0101                         l1575 030E  
                       l1577 031A                         ?_isr 0070                         u2000 0323  
                       u1515 0266                         u1700 0083                         u1710 008A  
                       u1535 0270                         u1615 02B1                         u1800 00BD  
                       u1720 0091                         u1545 027A                         u1714 0085  
                       u1555 0282                         u1635 02C0                         u1900 00F1  
                       u1820 00C5                         u1804 00B8                         u1740 0099  
                       u1724 008C                         u1645 02C7                         u1910 00F8  
                       u1830 00CC                         u1750 00A0                         u1670 0074  
                       u1920 00FF                         u1840 00D3                         u1760 00A7  
                       u1680 007B                         u1914 00F3                         u1834 00C7  
                       u1754 009B                         u1940 0107                         u1924 00FA  
                       u1860 00DB                         u1844 00CE                         u1780 00AF  
                       u1764 00A2                         u1684 0076                         u1950 010E  
                       u1870 00E2                         u1790 00B6                         u1960 0115  
                       u1880 00E9                         u1954 0109                         u1874 00DD  
                       u1794 00B1                         _PEIE 005E                         u1964 0110  
                       u1884 00E4                         _WERR 3C8D                 __CFG_WRT$OFF 0000  
                       _main 030B                         _temp 0022                         fsr0h 0005  
                       indf0 0000                         fsr0l 0004                         btemp 007E  
                       start 0023                __CFG_IESO$OFF 0000                __CFG_MCLRE$ON 0000  
         _lcd_display_digits 0141                        ??_isr 0070                __CFG_PLLEN$ON 0000  
        ?_lcd_display_digits 0071                        ?_main 0070              __end_of___awdiv 0297  
              __CFG_WDTE$OFF 0000              __end_of___awmod 02DC              ___awdiv@divisor 0071  
                      _LCDIE 0492                        _LCDEN 3C8F                        _LCDIF 0092  
                      _T1CON 0018                        _LCDRL 0795                        _LCDPS 0792  
                      i1l290 001E              ___awdiv@counter 0076                        _TMR1H 0017  
                      _TMR1L 0016                        _SLPEN 3C8E                        _PORTC 000E  
                      _PORTD 000F                        _PORTE 0010               __CFG_FCMEN$OFF 0000  
             __CFG_BOREN$OFF 0000         ??_lcd_display_digits 0073                 display_int@t 007A  
               display_pot@p 0026                        status 0003                        wtemp0 007E  
            __initialization 0025                 __end_of_main 0326                       ??_main 007D  
                     _ADCON0 009D                       _ADCON1 009E         __size_of_device_init 010D  
                     _ADRESH 009C                       _ADRESL 009B             ___awdiv@dividend 0073  
                     _T1GCON 0019                       _LCDCON 0791                       _LCDSE0 0798  
                     _LCDCST 0794                       _LCDSE1 0799                       _LCDSE2 079A  
                     _LCDIRE 3C9F                       _LCDIRI 3C9D                       _LCDREF 0793  
                     _LCDIRS 3C9E                       i1l1587 0019                       i1l1589 001D  
                     _OSCCON 0099               __CFG_PWRTE$OFF 0000             __end_of_lcd_init 030B  
                  ??___awdiv 0075               __CFG_STVREN$ON 0000                    ??___awmod 0075  
           ___awdiv@quotient 0078              ___awmod@divisor 0071        lcd_display_digits@val 0074  
            ___awmod@counter 0076         __size_of_display_int 007E         __size_of_display_pot 0017  
    __end_of__initialization 0030               __pcstackCOMMON 0070                 __pidataBANK0 034D  
                 __pbssBANK0 0020                   __pmaintext 030B                   __pintentry 0004  
                    _T1OSCEN 00C3                    ?_lcd_init 0070                      ___awdiv 0246  
                    ___awmod 0297                    _LCDDATA10 07AA                    _LCDDATA11 07AB  
                    __ptext1 0326                      __ptext2 01C8                      __ptext3 0141  
                    __ptext4 0297                      __ptext5 0246                      __ptext6 0034  
                    __ptext7 02DC                    _T1CONbits 0018                 __size_of_isr 001F  
           ___awmod@dividend 0073                    _LCDPSbits 0792                    _SEG10COM0 3D0A  
                  _SEG10COM1 3D22                    _SEG10COM2 3D3A                    _SEG10COM3 3D52  
                  _SEG20COM0 3D14                    _SEG12COM0 3D0C                    _SEG20COM1 3D2C  
                  _SEG12COM1 3D24                    _SEG20COM2 3D44                    _SEG12COM2 3D3C  
                  _SEG20COM3 3D5C                    _SEG12COM3 3D54                    _SEG16COM0 3D10  
                  _SEG16COM1 3D28                    _SEG16COM2 3D40                    _SEG17COM0 3D11  
                  _SEG17COM1 3D29                    _SEG17COM2 3D41                    _SEG17COM3 3D59  
                 ??_lcd_init 0071         end_of_initialization 0030  __size_of_lcd_display_digits 0087  
           __CFG_CLKOUTEN$ON 0000               display_int@bcd 0024                 __pstringtext 033D  
              ??_device_init 0071             __CFG_FOSC$INTOSC 0000                    _TRISCbits 008E  
                  _TRISDbits 008F                    _TRISEbits 0090                ??_display_int 007C  
              ??_display_pot 007D          lcd_display_digits@b 0071          start_initialization 0025  
                __end_of_isr 0023         __end_of_segment_data 034D          __end_of_device_init 0141  
                __pdataBANK0 0028          __end_of_display_int 0246          __end_of_display_pot 033D  
                  ___latbits 0002                __pcstackBANK0 0024            __size_of_lcd_init 002F  
                   ?___awdiv 0071                     ?___awmod 0071                  _device_init 0034  
                   _LCDDATA0 07A0                     _LCDDATA1 07A1                     _LCDDATA2 07A2  
                   _LCDDATA3 07A3                     _LCDDATA4 07A4                     _LCDDATA5 07A5  
                   _LCDDATA6 07A6                     _LCDDATA7 07A7                     _LCDDATA8 07A8  
                   _LCDDATA9 07A9                    _isr_count 0028                     _SEG0COM0 3D00  
                   _SEG0COM1 3D18                     _SEG0COM2 3D30                     _SEG0COM3 3D48  
                   _SEG1COM0 3D01                     _SEG1COM1 3D19                     _SEG1COM2 3D31  
                   _SEG1COM3 3D49                     _SEG2COM0 3D02                     _SEG2COM1 3D1A  
                   _SEG2COM2 3D32                     _SEG2COM3 3D4A                     _SEG4COM0 3D04  
                   _SEG4COM1 3D1C                     _SEG4COM2 3D34                     _SEG4COM3 3D4C  
                   _SEG5COM0 3D05                     _SEG5COM1 3D1D                     _LATDbits 010F  
                   _SEG5COM2 3D35                     _SEG5COM3 3D4D                     _PIE1bits 0091  
                   _PIR1bits 0011                    _pot_value 0020                  _display_int 01C8  
                _display_pot 0326                   _ADCON0bits 009D   __end_of_lcd_display_digits 01C8  
           __size_of___awdiv 0051                 _segment_data 033D             __size_of___awmod 0045  
                 _ANSELAbits 018C                   _ANSELBbits 018D                   _ANSELDbits 018F  
                 _LCDCONbits 0791                     _lcd_init 02DC                __size_of_main 001B  
                   int$flags 007E                     intlevel1 0000                 ?_device_init 0070  
